{% extends 'base.html.twig' %}

{% block title %}Trip{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
{% endblock %}
{% block body %}
<div class="up">
    <div class="info-left">
        <img src="https://wallpapercave.com/wp/wp3004763.jpg" alt="">
        <div class="info_trip">
            <h1>{{ trip.name }}</h1>
            <p>Du {{ trip.startDate ? trip.startDate|date('d-m-Y') : '' }} au {{ trip.endDate ? trip.endDate|date('d-m-Y') : '' }}</p>
        </div>
    </div>
{# Dans templates/activity/index.html.twig #}
<a href="{{ path('app_category_activity_new') }}">Créer une nouvelle catégorie</a>
    <div class="cards">
        <div class="card" id="budgetCard">
            <h2>Budget</h2>
            <p>{{ trip.budget }} €</p>  
            <h2>Dépense</h2>
            <p id="totalExpense">0 €</p>
        </div>  
        <svg viewBox="0 0 36 36" class="circle-svg">
            <path class="around" stroke-dasharray="100, 100" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"></path>
            <path class="percent" stroke-dasharray="{{totalCostActivity / trip.budget  * 100}}, 100" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"></path>
            <text x="18" y="14" text-anchor="middle" dy="7" font-size="20">{{(totalCostActivity / trip.budget  * 100)|round(1, 'floor')}} %</text>
        </svg>
    </div>
</div>
<button class="add-activity">Ajouter une activité</button>
<div class="calendar">
    <div class="swiper mySwiper" style="min-height:500px">
        <div class="swiper-wrapper" style="min-height:500px">
            {% set totalCostActivity = 0 %}
            {% set current_date = trip.startDate %}
            {% for i in 0..days %}
            <div class="swiper-slide">
                <div class="day">
                    <div class="date">
                        <p class="date-num">JOUR&nbsp;{{ i + 1 }}</p>
                        <p class="date-day">{{ current_date|date('d M Y') }}</p>
                    </div>
                    <div class="events">
                        {% for activity in trip.tripActivities %}
                        {% if activity.startDate|date('d-m-Y') <= current_date|date('d-m-Y') and activity.endDate|date('d-m-Y') >= current_date|date('d-m-Y') %}
                        <div class="event" style="background-color: {{ activity.activity.categoryActivity.backgroundColor }}">                            <a href="{{ path('app_activity_show', {'id': activity.activity.id}) }}">
                            {% if activity.activity.createdBy and activity.activity.createdBy.imageName %}
                            <img src="{{ asset('uploads/avatars/' ~ activity.activity.createdBy.imageName) }}" alt="{{ activity.activity.createdBy.email }}" class="profile-picture">
                        {% else %}
                            <div class="profile-picture default-avatar">
                                {{ activity.activity.createdBy ? activity.activity.createdBy.email|first|upper : 'U' }}
                            </div>
                        {% endif %}
                            <div class="event-left">
                                <p>{{ activity.startDate|date('H:i') }}H</p>
                                <p>{{ activity.endDate|date('H:i') }}H</p>
                            </div>
                            <div class="event-right">
                                <p>{{ activity.activity.name }}</p>
                                <p>{{ activity.activity.description }}</p>
                                <p>Coût: {{ activity.activity.cost }} €</p>
                            </div>
                        </a>
                        </div>
                        {% set totalCostActivity = totalCostActivity + activity.activity.cost %}
                        {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
            {% set current_date = current_date|date_modify('+1 day') %}
            {% endfor %}
        </div>
        <div class="swiper-pagination"></div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
    </div>
    
    <div id="activityModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Ajouter une activité</h2>
            <form id="addActivityForm">
                <input type="text" id="activityName" placeholder="Nom de l'activité" required>
                <textarea id="activityDescription" placeholder="Description"></textarea>
                <input type="number" id="activityCost" placeholder="Coût">
                <input type="datetime-local" id="activityStartDate" required>
                <input type="datetime-local" id="activityEndDate" required>
                <select id="activityCategory" required>
                    <option value="">Choisir une catégorie</option>
                    {% for category in categories %}
                        <option value="{{ category.id }}" data-color="{{ category.backgroundColor }}">{{ category.nom }}</option>
                    {% endfor %}
                </select><br>
                <button type="submit">Ajouter</button>
            </form>
        </div>
    </div>
    {% if trip.tripActivities|length > 4 %}
    <div class="see-more">Voir plus ({{ trip.tripActivities|length - 4 }} autres)</div>
    {% endif %}
</div>

<a href="{{ path('app_trip_index') }}">Retour à la liste</a>
<a href="{{ path('app_trip_edit', {'id': trip.id}) }}">Modifier</a>
{{ include('trip/_delete_form.html.twig') }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            var swiper = new Swiper(".mySwiper", {
                slidesPerView: 4,
                spaceBetween: 30,
                navigation: {
                    nextEl: ".swiper-button-next",
                    prevEl: ".swiper-button-prev",
                },
                pagination: {
                    el: ".swiper-pagination",
                    clickable: true,
                },
                mousewheel: false,
                keyboard: true,
            });

            let totalCostActivity = {{ totalCostActivity }};
            $('#totalExpense').text(totalCostActivity + ' €');

            $('.add-activity').on('click', function() {
                $('#activityModal').show();
                const defaultDate = new Date('{{ trip.startDate|date('Y-m-d') }}');
                const formattedDate = defaultDate.toISOString().split('T')[0];
                $('#activityStartDate').val(formattedDate + 'T09:00');
                $('#activityEndDate').val(formattedDate + 'T10:00');
            });

            
            $('.close').on('click', function() {
                $('#activityModal').hide();
            });

            $('#addActivityForm').on('submit', function(e) {
                e.preventDefault();
                const tripId = {{ trip.id }};
                const data = {
                    name: $('#activityName').val(),
                    description: $('#activityDescription').val(),
                    cost: parseFloat($('#activityCost').val()),
                    startDate: $('#activityStartDate').val(),
                    endDate: $('#activityEndDate').val(),
                    categoryId: $('#activityCategory').val()
                };

                console.log('Submitting form with data:', data);

                $.ajax({
                    url: '/trip/' + tripId + '/add-activity',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function(response) {
                        console.log('Server response:', response);
                        try {
                            if (response && response.startDate && response.endDate && response.name && response.description && response.cost !== undefined) {
                                const startTime = response.startDate.split('T')[1].substring(0, 5);
                                const endTime = response.endDate.split('T')[1].substring(0, 5);

                                const activityDate = new Date(response.startDate);
                                const formattedDate = activityDate.toLocaleDateString('fr-FR', { day: '2-digit', month: 'short', year: 'numeric' });

                                const dayColumn = $('.day').filter(function() {
                                    return $(this).find('.date-day').text().trim() === formattedDate;
                                });

                                if (dayColumn.length > 0) {
                                    const categoryColor = response.categoryColor || '#default-color';
                                    const newActivity = `
                                        <div class="event" style="background-color: ${categoryColor}">
                                            <div class="event-left">
                                                <p>${startTime}H</p>
                                                <p>${endTime}H</p>
                                            </div>
                                            <div class="event-right">
                                                <p>${response.name}</p>
                                                <p>${response.description}</p>
                                                <p>Coût: ${response.cost} €</p>
                                                <p>Catégorie: ${response.categoryName || 'Non catégorisé'}</p>
                                            </div>
                                        </div>
                                    `;

                                    dayColumn.find('.events').append(newActivity);
                                    totalCostActivity += parseFloat(response.cost);
                                    $('#totalExpense').text(totalCostActivity.toFixed(2) + ' €');
                                    swiper.update();
                                    swiper.updateSlides();
                                    swiper.updateProgress();
                                    swiper.updateSlidesClasses();
                                    $('#activityModal').hide();
                                    $('#addActivityForm')[0].reset();
                                } else {
                                    console.error('Colonne du jour non trouvée pour la date:', formattedDate);
                                    alert('Impossible d\'ajouter l\'activité. La date est en dehors de la période du voyage.');
                                }
                            } else {
                                throw new Error('Réponse du serveur invalide ou incomplète');
                            }
                        } catch (error) {
                            console.error('Erreur dans le callback de succès:', error);
                            alert('Une erreur est survenue lors de l\'ajout de l\'activité. Veuillez réessayer.');
                            
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Erreur AJAX:', status, error);
                        console.error('Réponse du serveur:', xhr.responseText);
                        alert('Une erreur est survenue : ' + xhr.responseText);
                        $('#activityModal').hide();
                        $('#addActivityForm')[0].reset();
                    }
                }).always(function() {

                });
            });
        });
    </script>
{% endblock %}
